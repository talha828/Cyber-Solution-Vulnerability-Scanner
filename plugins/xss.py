from utils.status import *
from .helper import Plugin, utils
import requests
import json
import sys


class XSSScanner(Plugin):
    def __init__(self):
        self.name = "XSS Scanner"
        self.enable = True
        self.description = "Scans for Cross-Site Scripting (XSS) vulnerabilities"
        self.payloads = json.loads(open(sys.path[0] + "/plugins/files/xss_payloads.json", "r").read())

    def presquites(self, host):
        if utils.isalive(utils.uri(host)):
            return True
        return False

    def vuln(self, host, payload):
        try:
            # Inject the payload into the host URL
            url = utils.uri(host) + payload
            response = requests.get(url)

            # Check if the payload is reflected in the response
            if payload in response.text:
                return True
            return False
        except:
            return False

    def main(self, host):
        try:
            for payload in self.payloads:
                if self.vuln(host, payload):
                    return Result(
                        status=SUCCESS,
                        msg=f"XSS vulnerability found with payload: {payload}",
                        request=payload,
                        response=None
                    )
        except Exception as e:
            return Result(
                status=FAILED,
                msg=str(e),
                request=None,
                response=None
            )

        return Result(FAILED, None, None, None)
